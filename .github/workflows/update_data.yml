name: Update MTG Data and Deploy
on:
  # Wait for all three preprocessing workflows to complete
  workflow_run:
    workflows: 
      - "Update Modern Data"
      - "Update Standard Data" 
      - "Update Pioneer Data"
    types: [completed]
    branches: [main]  # Adjust if your default branch is different
  
  # Allow manual deployment
  workflow_dispatch:
  
  # Also deploy on changes to the site code (but not the data)
  push:
    branches: [main]
    paths-ignore:
      - 'process_data.py'
      - 'requirements.txt'
      - '.github/workflows/update_*.yml'

# Sets permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read  # Needed to download artifacts

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job to wait for all preprocessing jobs to complete
  wait-for-preprocessing:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run'
    outputs:
      all-complete: ${{ steps.check-status.outputs.all-complete }}
    steps:
      - name: Check if all preprocessing workflows completed successfully
        id: check-status
        uses: actions/github-script@v7
        with:
          script: |
            const workflows = ['Update Modern Data', 'Update Standard Data', 'Update Pioneer Data'];
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            let allComplete = true;
            
            for (const workflow of workflows) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner,
                repo,
                workflow_id: `update_${workflow.split(' ')[1].toLowerCase()}.yml`,
                per_page: 1
              });
              
              if (runs.data.workflow_runs.length === 0 || 
                  runs.data.workflow_runs[0].status !== 'completed' ||
                  runs.data.workflow_runs[0].conclusion !== 'success') {
                allComplete = false;
                console.log(`${workflow} not yet complete or failed`);
                break;
              }
            }
            
            core.setOutput('all-complete', allComplete);
            return allComplete;

  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [wait-for-preprocessing]
    if: always() && (github.event_name != 'workflow_run' || needs.wait-for-preprocessing.outputs.all-complete == 'true')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.15'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download all processed data artifacts
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: update_modern.yml
          name: modern-processed-data
          path: ./temp-data
          if_no_artifact_found: warn
          
      - name: Download Standard data
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: update_standard.yml  
          name: standard-processed-data
          path: ./temp-data
          if_no_artifact_found: warn
          
      - name: Download Pioneer data  
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: update_pioneer.yml
          name: pioneer-processed-data
          path: ./temp-data
          if_no_artifact_found: warn

      - name: Extract and organize data
        run: |
          mkdir -p docs
          cd temp-data
          
          # Extract all zip files to docs directory
          for zipfile in *.zip; do
            if [ -f "$zipfile" ]; then
              echo "Extracting $zipfile"
              unzip -o "$zipfile" -d ../docs/
            fi
          done
          
          cd ..
          echo "Extracted data files:"
          ls -la docs/
          
      - name: Build WASM
        run: |
          ./bundle.sh
          
      - name: Prepare site for deployment
        run: |
          echo "Site contents ready for deployment:"
          ls -la docs/
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4